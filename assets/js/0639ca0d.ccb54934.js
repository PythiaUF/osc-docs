"use strict";(self.webpackChunkosc_docs=self.webpackChunkosc_docs||[]).push([[7957],{3053:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var t=s(4848),i=s(8453);const o={title:"Deploying to Kubernetes",description:"Club Website Developer Kubernetes guide",sidebar_position:9},a="Deploying to Kubernetes",r={id:"legacy/Developers/kubernetes",title:"Deploying to Kubernetes",description:"Club Website Developer Kubernetes guide",source:"@site/docs/website/legacy/Developers/kubernetes.md",sourceDirName:"legacy/Developers",slug:"/legacy/Developers/kubernetes",permalink:"/docs/website/legacy/Developers/kubernetes",draft:!1,unlisted:!1,editUrl:"https://github.com/ufosc/osc-docs/blob/main/docs/website/legacy/Developers/kubernetes.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Deploying to Kubernetes",description:"Club Website Developer Kubernetes guide",sidebar_position:9},sidebar:"defaultSidebar",previous:{title:"Testing & Linting",permalink:"/docs/website/legacy/Developers/testing"},next:{title:"Contributing Guide",permalink:"/docs/website/legacy/Developers/contributing-guide"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Building the Docker image",id:"building-the-docker-image",level:2},{value:"Configuring Kubernetes",id:"configuring-kubernetes",level:2},{value:"Applying the YAML configuration",id:"applying-the-yaml-configuration",level:3},{value:"GKE-specific resources",id:"gke-specific-resources",level:3},{value:"Static IP",id:"static-ip",level:4},{value:"SSL Ingress Policy",id:"ssl-ingress-policy",level:4},{value:"Creating an Admin",id:"creating-an-admin",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"deploying-to-kubernetes",children:"Deploying to Kubernetes"}),"\n",(0,t.jsx)(n.admonition,{title:"OUTDATED",type:"danger",children:(0,t.jsxs)(n.p,{children:["This page is part of the documentation for release V1.0. This documentation is outdated and V1.0 is no longer maintained. See ",(0,t.jsx)(n.a,{href:"/docs/website/",children:"index"})," for the latest information."]})}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes, often abbreviated as K8s, is an open-source container orchestration platform used for automating the deployment, scaling, and management of containerized applications. With Kubernetes, you can set up a configuration file that automatically deploys the website's infrastructure in seconds."}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes is based on Docker, an open-source platform and a set of tools for creating, deploying, and managing containerized applications. To deploy the website on Kubernetes, you'll first need to build the website's container image."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Complete the ",(0,t.jsx)(n.a,{href:"/docs/website/legacy/Developers/introduction",children:"Getting Started"})," guide."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"}),": build the website container image."]}),"\n",(0,t.jsxs)(n.li,{children:["Kubernetes Cluster & Kubectl: Use a cloud hosting platform or ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/desktop/kubernetes/",children:"launch a Kubernetes node on Docker"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"building-the-docker-image",children:"Building the Docker image"}),"\n",(0,t.jsx)(n.admonition,{title:"Artifact Registry",type:"danger",children:(0,t.jsx)(n.p,{children:"If you're using a SaaS/cloud solution, you'll need to upload the container image to your project's artifact registry."})}),"\n",(0,t.jsx)(n.p,{children:"Navigate to the source directory"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd Club_Website_2\n"})}),"\n",(0,t.jsx)(n.p,{children:"Run docker build:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker build --tag osc-website .\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuring-kubernetes",children:"Configuring Kubernetes"}),"\n",(0,t.jsxs)(n.p,{children:["You can deploy containers on Kubernetes using yaml files. Yaml is a file format similar to JSON, you can read more about it ",(0,t.jsx)(n.a,{href:"https://www.educative.io/blog/yaml-tutorial",children:"here"}),". The website YAML file is documented below."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:'apiVersion: v1\nkind: Secret\n# The secrets here correspond to the website\'s environment variables.\n# These are documented at https://docs.ufosc.org/docs/website/Developers/configuration\ndata:\n  secret:    [YOU-SECRET-HERE]\n  smtp-user: [YOUR-SMTP-USER]\n  smtp-pass: [YOUR-SMPT-PASS]\n  captcha:   [YOUR-CAPTCHA-KEY] # Optional\n  email:     [YOUR-CONTACT-FORM-EMAIL]\nmetadata:\n  name: osc-website-secrets\n  labels:\n    app: osc-website\n---\n# A volume is a persistent store of data.\n# This is the volume for the website database.\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: osc-website-volume-db\n  labels:\n    app: osc-website\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n\t  # The amount of persistent storage to allocate.\n      storage: 1Gi\n---\n# A deployment provides a declarative way to describe the desired state of\n# an application. In this case, the desired state is to have at least 1\n# replica of Mongodb and the OSC Website running on the node.\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: osc-website\n  labels:\n    app: osc-website\nspec:\n  # The replicas property specifies how many copies of this deployment\n  # to try to launch. Generally, more replicas mean the app scales to\n  # more users.\n  replicas: 1\n  selector:\n    matchLabels:\n      app: osc-website\n  template:\n    metadata:\n      labels:\n        app: osc-website\n    spec:\n      containers:\n        - name: mongodb\n          image: mongo\n          args: ["--dbpath", "/data/db"]\n          volumeMounts:\n            - name: osc-website-volume-db\n              mountPath: "/data/db/"\n        - name: club-website\n\t\t  # If you\'re using a cloud provider, you\'ll need to modify the image\n\t\t  # name to reference your artifact registry.\n          image: club-website:latest\n\t\t  # Environment variable configurations, as documented here:\n\t\t  # https://docs.ufosc.org/docs/website/Developers/configuration\n          env:\n            - name: MONGO_URI\n              value: "mongodb://127.0.0.1:27017"\n            - name: NODE_ENV\n              value: "production"\n            - name: RATE_LIMIT_MAX\n              value: "150"\n            - name: RATE_LIMIT_TIMEOUT\n              value: "1"\n            - name: SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: osc-website-secrets\n                  key: secret\n            - name: SMTP_USER\n              valueFrom:\n                secretKeyRef:\n                  name: osc-website-secrets\n                  key: smtp-user\n            - name: SMTP_PASS\n              valueFrom:\n                secretKeyRef:\n                  name: osc-website-secrets\n                  key: smtp-pass\n            - name: ADMIN_EMAIL\n              valueFrom:\n                secretKeyRef:\n                  name: osc-website-secrets\n                  key: email\n            - name: CACHE_INTERVAL\n              value: "480"\n            - name: CAPTCHA_SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: osc-website-secrets\n                  key: captcha\n          volumeMounts:\n            - name: osc-website-volume-uploads\n              mountPath: "/ufosc/app/uploads/"\n      volumes:\n        - name: osc-website-volume-db\n        - name: osc-website-volume-uploads\n---\n# A service exposes the 3002 port (default website port) of the osc-website\n# deployment. If you\'re running Kubernetes locally and you specify a nodePort,\n# the website will be accessible at http://localhost:nodePort.\napiVersion: v1\nkind: Service\nmetadata:\n  name: osc-website-service\n  labels:\n    app: osc-website\nspec:\n  type: NodePort\n  selector:\n    app: osc-website\n  ports:\n    - protocol: TCP\n      port: 3002\n      targetPort: 3002\n      # nodePort: 30000\n---\n# An ingress redirects traffic from your cluster\'s endpoint to\n# port 3002 of the website deployment. It is generally not required\n# in locally hosted environments.\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: osc-website-ingress\n  labels:\n    app: osc-website\nspec:\n  defaultBackend:\n    service:\n      name: osc-website-service\n      port:\n        number: 3002\n'})}),"\n",(0,t.jsx)(n.h3,{id:"applying-the-yaml-configuration",children:"Applying the YAML configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f your_file.yml\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you're using a cloud platform, ensure that kubectl is configured to target your remote cluster."}),"\n",(0,t.jsx)(n.h3,{id:"gke-specific-resources",children:"GKE-specific resources"}),"\n",(0,t.jsx)(n.admonition,{title:"GKE Only",type:"danger",children:(0,t.jsx)(n.p,{children:"These options only apply to clusters managed by Google Kubernetes Engine (GKE)."})}),"\n",(0,t.jsx)(n.p,{children:"Additional resources for Google Kubernetes engine."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:'# The ManagedCertificate resource instructs Google Cloud to\n# generate and sign an SSL certificate for the specified domains.\napiVersion: networking.gke.io/v1\nkind: ManagedCertificate\nmetadata:\n  name: osc-website-cert\n  labels:\n    app: osc-website\nspec:\n  domains:\n    - ufosc.org\n---\n# The GKE FrontendConfig is configured to redirect non-HTTPS\n# traffic to the HTTPS endpoint.\napiVersion: networking.gke.io/v1beta1\nkind: FrontendConfig\nmetadata:\n name: osc-website-fe-config\nspec:\n  sslPolicy: gke-ingress-ssl-policy\n  redirectToHttps:\n    enabled: true\n---\n# Same as before, but metadata.annotations specifies which\n# Google ingress controller, static IP, and certificate to\n# deploy the site with.\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: osc-website-ingress\n  labels:\n    app: osc-website\n  annotations:\n    kubernetes.io/ingress.class: "gce"\n    kubernetes.io/ingress.global-static-ip-name: oscwebsite\n    networking.gke.io/managed-certificates: osc-website-cert\n    networking.gke.io/v1beta1.FrontendConfig: osc-website-fe-config\nspec:\n  defaultBackend:\n    service:\n      name: osc-website-service\n      port:\n        number: 3002\n'})}),"\n",(0,t.jsx)(n.h4,{id:"static-ip",children:"Static IP"}),"\n",(0,t.jsx)(n.p,{children:"The configuration above requires registering a static IP address. A static IP address makes deployment considerably easier, since the website won't have to be exposed on (volatile) node IP addresses."}),"\n",(0,t.jsxs)(n.p,{children:["See Google's documentation ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"ssl-ingress-policy",children:"SSL Ingress Policy"}),"\n",(0,t.jsx)(n.p,{children:"Additionally, the GKE configuration depends on a registered SSL ingress policy. SSL policies specify the set of SSL features that Google Cloud load balancers use when negotiating SSL with clients."}),"\n",(0,t.jsxs)(n.p,{children:["See Google's documentation ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/load-balancing/docs/use-ssl-policies",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"creating-an-admin",children:"Creating an Admin"}),"\n",(0,t.jsxs)(n.p,{children:["The Kubernetes config sets up the website with an empty database, which makes logging in to the site is impossible. This is solved by connecting to the Mongo container and calling mongosh to add the first user. This process should only be done once, additional admins can be added through the ",(0,t.jsx)(n.a,{href:"/docs/website/legacy/admin",children:"admin dashboard"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"First, get a list of all pods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get pods\n"})}),"\n",(0,t.jsx)(n.p,{children:"The command should respond with something like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"NAME                          READY   STATUS    RESTARTS   AGE\nosc-website-c5986c5ff-zdbxk   2/2     Running   0          4h55m\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You'll be connecting to one of the pods specified by the output of the ",(0,t.jsx)(n.code,{children:"kubectl get pods"})," command. Note down one of the pod names assosciated with the osc-website deployment (if you have multiple replicas, you can choose any pod just as long as its part of the osc-website deployment resource)."]}),"\n",(0,t.jsx)(n.p,{children:"Connect using the following command (replace [YOUR-POD-NAME-HERE] with the pod name from above):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl exec --stdin --tty [YOUR-POD-NAME-HERE] -- /bin/bash\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Once connected, open the mongosh console by typing ",(0,t.jsx)(n.code,{children:"mongosh"}),". Then, paste the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"use test\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'db.users.insertOne({"username": "admin","password": {"hash": "\ufffda2O\ufffd\ufffd\ufffdw\ufffd\ufffd\\u0004\ufffd\ufffd\u0232\ufffd\ufffd7\\u000fM\ufffd2\\u0011\ufffd<\\u0015z\\u0016\\u0019E*\ufffd\ufffdc\u042e\\u0010\\u001e\\u0015\ufffd\ufffd\ufffd\u0582)\ufffdNe\ufffd\ufffdG\ufffdVH/\ufffd\ufffd9\ufffd\ufffd\ufffd\ufffd\ufffdq\\u0003\ufffd\\t\ufffd\ufffd\u05e4}\ufffd\ufffd\ufffdi\ufffd\ufffdY\ufffd\\u00125\ufffd\ufffdd3\ufffdV\ufffd\\t6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdW;\ufffd~\ufffd\ufffd\ufffd?A\ufffd\ufffd\\u001c\ufffd\ufffdX8\ufffd\ufffd/\\u0012\ufffd\ufffd\\u0007)t\ufffd\ufffd9\\u0001<","salt": "4vRF0ZTMELWmPGMpAgy6hsiJm/pOUlgPYFk+faK+yaFv/x0+lITG+4kX/y5bXudjMdGWLN2PV8UhH5s5dRLPaGgh2qwrbocDqEdyvbqSqVPAQxKIwFSytoRySYfKZJdCgK970UmrPDyGmoAIRZ/DN8YZ4fTirkSAeRlTWLSbyfg="},"fullName": "admin","role": "admin","isAdmin": true,"date": {"$date": "2023-09-17T15:53:18.529Z"},"__v": 0})\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The command above adds a user with the username ",(0,t.jsx)(n.code,{children:"admin"})," and password ",(0,t.jsx)(n.code,{children:"123456"}),". You should now reset the admin's password using the ",(0,t.jsx)(n.a,{href:"/docs/website/legacy/admin",children:"admin dashboard"})," as soon as possible to prevent attackers from logging in with the default credentials. Resetting the password through the admin dashboard should reset the password salt as well."]}),"\n",(0,t.jsxs)(n.p,{children:["Finally, type ",(0,t.jsx)(n.code,{children:"exit"})," and press enter to exit the mongosh console. Type ",(0,t.jsx)(n.code,{children:"exit"})," and press enter once again to close the connection to the pod."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(6540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);