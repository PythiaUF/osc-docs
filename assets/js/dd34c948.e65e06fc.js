"use strict";(self.webpackChunkosc_docs=self.webpackChunkosc_docs||[]).push([[7764],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,b=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return r?n.createElement(b,a(a({ref:t},c),{},{components:r})):n.createElement(b,a({ref:t},c))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1211:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const s={title:"API & Routes",description:"Club Website Developer API",sidebar_position:1},a="API & Routes",i={unversionedId:"Developers/API/api",id:"Developers/API/api",title:"API & Routes",description:"Club Website Developer API",source:"@site/docs/website/Developers/API/api.md",sourceDirName:"Developers/API",slug:"/Developers/API/",permalink:"/docs/website/Developers/API/",draft:!1,editUrl:"https://github.com/ufosc/osc-docs/blob/main/docs/website/Developers/API/api.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"API & Routes",description:"Club Website Developer API",sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Database Models",permalink:"/docs/website/Developers/Databases/models"},next:{title:"Blog Route",permalink:"/docs/website/Developers/API/blog"}},l={},p=[{value:"Express",id:"express",level:2},{value:"Express Router",id:"express-router",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"api--routes"},"API & Routes"),(0,o.kt)("p",null,"The OSC website API exists to serve, create, modify, and delete dynamic resources, for instance:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Blog metadata and rendered HTML articles (documented in ",(0,o.kt)("a",{parentName:"li",href:"/docs/website/Developers/API/blog"},"Developers/API/blog"),")."),(0,o.kt)("li",{parentName:"ol"},"Passing contact messages to the SMTP mail server (documented in ",(0,o.kt)("a",{parentName:"li",href:"/docs/website/Developers/API/contact"},"Developers/API/contact"),")."),(0,o.kt)("li",{parentName:"ol"},"Serving the various editable forms (documented in ",(0,o.kt)("a",{parentName:"li",href:"/docs/website/Developers/API/edit"},"Developers/API/edit"),")."),(0,o.kt)("li",{parentName:"ol"},"User authentication (documented in ",(0,o.kt)("a",{parentName:"li",href:"/docs/website/Developers/API/users"},"Developers/API/users"),").")),(0,o.kt)("p",null,"In the source code, each route occupies a separate file in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ufosc/Club_Website_2/tree/main/routes"},"routes folder"),", and all routes are subsequently organized in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ufosc/Club_Website_2/blob/main/routes/api.js"},"routes/api.js"),"."),(0,o.kt)("h2",{id:"express"},"Express"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Express.js is a backend web framework for creating and serving RESTful APIs on NodeJS. It is documented extensively at ",(0,o.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"expressjs.com"),".")),(0,o.kt)("p",null,"Expressjs, otherwise known as Express, implements a simple NodeJS web server. It defines a relative routing path and a series of middleware to use with each function. Each middleware is a JavaScript function that accepts an HTTP request (the ",(0,o.kt)("inlineCode",{parentName:"p"},"req")," variable) and a response object (the ",(0,o.kt)("inlineCode",{parentName:"p"},"res")," variable). The ",(0,o.kt)("inlineCode",{parentName:"p"},"res")," variable is an interface for sending responses back to users."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// An API route served over '/', using the HTTP GET method.\nrouter.get('/', (req, res) => {\n\n    // req holds the user's request.\n    const body = req.body\n    const someField = body.someField\n    const someField2 = body.someField2\n\n    // We respond by interfacing with 'res'\n    res.status(200).send({ message: \"accepted\" })\n\n})\n\n// Other HTTP methods...\nrouter.post('/', (req, res) => { /* ... */ })\nrouter.delete('/', (req, res) => { /* ... */ })\nrouter.put('/', (req, res) => { /* ... */ })\n")),(0,o.kt)("h2",{id:"express-router"},"Express Router"),(0,o.kt)("p",null,"The express router, part of the Expressjs framework, enables developers to create and export APIs modularly. Meaning, an API can be developed according to some relative path (e.g ",(0,o.kt)("inlineCode",{parentName:"p"},"/users"),"), imported into another router, and then served over some other, more abstract path (e.g ",(0,o.kt)("inlineCode",{parentName:"p"},"/api/users"),"). Consider the following example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="File A"',title:'"File','A"':!0},"const express = require('express')\nconst router = express.Router()\n\nrouter.get('/', (req, res) => { /* ... */ }\nrouter.post('/', (req, res) => { /* ... */ }\n// ...\n\nmodule.exports = router\n")),(0,o.kt)("p",null,"Then, imported into file B:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="File B"',title:'"File','B"':!0},"const express = require('express')\nconst router = express.Router()\n\n// The API defined in File A.\nconst myFirstRoute = require('./fileA')\n\n// Serve the API in File A on /mySecondRoute.\nrouter.use('/mySecondRoute', myFirstRoute)\n")),(0,o.kt)("p",null,"In this way, HTTP routes can be defined in a secure, conveniently testable, and organized manner."))}d.isMDXComponent=!0}}]);