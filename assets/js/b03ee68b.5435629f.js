"use strict";(self.webpackChunkosc_docs=self.webpackChunkosc_docs||[]).push([[368],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(a),g=r,c=u["".concat(o,".").concat(g)]||u[g]||d[g]||i;return a?n.createElement(c,l(l({ref:t},m),{},{components:a})):n.createElement(c,l({ref:t},m))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=g;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},6765:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={title:"Images Route",description:"Club Website Developer API",sidebar_position:5},l="Images Route",s={unversionedId:"Developers/API/images",id:"Developers/API/images",title:"Images Route",description:"Club Website Developer API",source:"@site/docs/website/Developers/API/images.md",sourceDirName:"Developers/API",slug:"/Developers/API/images",permalink:"/docs/website/Developers/API/images",draft:!1,editUrl:"https://github.com/ufosc/osc-docs/docs/website/Developers/API/images.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Images Route",description:"Club Website Developer API",sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Edit Route",permalink:"/docs/website/Developers/API/edit"},next:{title:"Users Route",permalink:"/docs/website/Developers/API/users"}},o={},p=[{value:"Bulk Retrieve Images: (GET) /api/image/",id:"bulk-retrieve-images-get-apiimage",level:2},{value:"Request Parameters",id:"request-parameters",level:3},{value:"Sample Response",id:"sample-response",level:3},{value:"Example",id:"example",level:3},{value:"Fetch Image File: (GET) api/image/:id",id:"fetch-image-file-get-apiimageid",level:2},{value:"Request Parameters",id:"request-parameters-1",level:3},{value:"Example",id:"example-1",level:3},{value:"Upload Image: (POST) /api/image/",id:"upload-image-post-apiimage",level:2},{value:"Request Parameters",id:"request-parameters-2",level:3},{value:"Response",id:"response",level:3},{value:"Example",id:"example-2",level:3},{value:"Delete Image: (DELETE) api/image/:id",id:"delete-image-delete-apiimageid",level:2},{value:"Request Parameters",id:"request-parameters-3",level:3},{value:"Response",id:"response-1",level:3}],m={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"images-route"},"Images Route"),(0,r.kt)("p",null,"The blog route interfaces with the images ",(0,r.kt)("a",{parentName:"p",href:"/docs/website/Developers/Databases/models"},"database model")," and serves images using their database ID."),(0,r.kt)("admonition",{title:"routes/images.js",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The images route is defined in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ufosc/Club_Website_2/blob/main/routes/images.js"},"/routes/images.js")," and operates on the ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/image")," API path.")),(0,r.kt)("h2",{id:"bulk-retrieve-images-get-apiimage"},"Bulk Retrieve Images: (GET) /api/image/"),(0,r.kt)("p",null,"To index images on the /admin page, it was necessary to implement a route which returned an index of the most recently uploaded images. Unlike the ",(0,r.kt)("inlineCode",{parentName:"p"},"GET: /api/image/:id")," route, which returns the actual image file, the ",(0,r.kt)("inlineCode",{parentName:"p"},"GET: /api/image/")," route returns the underlying JSON objects."),(0,r.kt)("p",null,"This is an authenticated route."),(0,r.kt)("h3",{id:"request-parameters"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"JWT (cookie)"),(0,r.kt)("td",{parentName:"tr",align:null},"(Required) Auth cookie")))),(0,r.kt)("h3",{id:"sample-response"},"Sample Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Content-Type: application/json"',title:'"Content-Type:','application/json"':!0},'[\n    {\n        "_id":"64bff624f6a34b73e74e7de1",\n        "filename":"1689501903131-459608087.png",\n        "description":"lorem ipsum dolor",\n        "path":"test/assets/1x1.png",\n        "date":"2023-07-25T16:19:48.163Z","__v":0\n    }\n]\n')),(0,r.kt)("p",null,"Empty response:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type: application/json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Content-Type: application/json"',title:'"Content-Type:','application/json"':!0},"[]\n")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -XGET --cookie \"jwt=<AUTH COOKIE>\" 'https://ufosc.org/api/image'\n")),(0,r.kt)("h2",{id:"fetch-image-file-get-apiimageid"},"Fetch Image File: (GET) api/image/:id"),(0,r.kt)("p",null,"This route fetches image files by the specified URL ID parameter and returns them. An error is returned if the ID is invalid or non-existent."),(0,r.kt)("h3",{id:"request-parameters-1"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},":id (path)"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of the requested blog post.")))),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -XGET 'https://ufosc.org/api/image/<IMAGE ID HERE>'\n")),(0,r.kt)("h2",{id:"upload-image-post-apiimage"},"Upload Image: (POST) /api/image/"),(0,r.kt)("p",null,"This route consumes a ",(0,r.kt)("inlineCode",{parentName:"p"},"multipart/form-data")," form, with a single image upload demarcated by the 'File' form field. To see an example submission, see: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ufosc/Club_Website_2/blob/main/public/js/editDb.js#L141"},"public/js/editDb.js"),". This is an authenticated route."),(0,r.kt)("h3",{id:"request-parameters-2"},"Request Parameters"),(0,r.kt)("p",null,"Request body: ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type: multipart/form-data")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"JWT (cookie)"),(0,r.kt)("td",{parentName:"tr",align:null},"(Required) Auth cookie")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Description (form field)"),(0,r.kt)("td",{parentName:"tr",align:null},"(Required) Image Description")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"File (form field, as image file)"),(0,r.kt)("td",{parentName:"tr",align:null},"(Required) .png or .jpeg image")))),(0,r.kt)("h3",{id:"response"},"Response"),(0,r.kt)("p",null,"The Image metadata."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type: application/json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="application/json"',title:'"application/json"'},'{\n    "_id":"64bff624f6a34b73e74e7de1",\n    "filename":"1689501903131-459608087.png",\n    "description":"lorem ipsum dolor",\n    "path":"test/assets/1x1.png",\n    "date":"2023-07-25T16:19:48.163Z","__v":0\n}\n')),(0,r.kt)("p",null,"If the uploaded image bit alignment is wrong, the following will be returned:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="routes/images.js"',title:'"routes/images.js"'},'{ "error": "Bad File Encoding" }\n')),(0,r.kt)("p",null,"If the file type is wrong, the following will be returned:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="routes/images.js"',title:'"routes/images.js"'},'{ "error": "bad file type: use .png or .jpeg instead" }\n')),(0,r.kt)("p",null,"If the image File or description are missing, the following will be returned:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="routes/images.js"',title:'"routes/images.js"'},'{ "error": "expected image and description" }\n')),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ufosc/Club_Website_2/blob/main/public/js/editDb.js#L141"},"public/js/editDb.js"),"."),(0,r.kt)("h2",{id:"delete-image-delete-apiimageid"},"Delete Image: (DELETE) api/image/:id"),(0,r.kt)("p",null,"Deletes an image from the database. This is an authenticated route."),(0,r.kt)("h3",{id:"request-parameters-3"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},":id (path)"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of the image.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"JWT (cookie)"),(0,r.kt)("td",{parentName:"tr",align:null},"(Required) Auth cookie")))),(0,r.kt)("h3",{id:"response-1"},"Response"),(0,r.kt)("p",null,"The server responds with the JSON object of the deleted image."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type: application/json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="application/json"',title:'"application/json"'},'{\n    "_id":"64bff624f6a34b73e74e7de1",\n    "filename":"1689501903131-459608087.png",\n    "description":"lorem ipsum dolor",\n    "path":"test/assets/1x1.png",\n    "date":"2023-07-25T16:19:48.163Z","__v":0\n}\n')),(0,r.kt)("p",null,"If the ':id' parameter is invalid, the following JSON object is returned:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="routes/images.js"',title:'"routes/images.js"'},'{ "error": "Invalid ID" }\n')),(0,r.kt)("p",null,"If the ID is valid but not longer exists, the following JSON object is returned:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="routes/images.js"',title:'"routes/images.js"'},'{ "error": "ID does not exist" }\n')),(0,r.kt)("p",null,"If a client lacks sufficient authentication, a status 401-Forbidden error will be returned."))}d.isMDXComponent=!0}}]);