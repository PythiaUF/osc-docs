"use strict";(self.webpackChunkosc_docs=self.webpackChunkosc_docs||[]).push([[6635],{1260:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var s=n(4848),r=n(8453);const o={title:"Contributing Guide",description:"Club Website Developer Contributing Guide",sidebar_position:10},t="Contributing Guide",l={id:"legacy/Developers/contributing-guide",title:"Contributing Guide",description:"Club Website Developer Contributing Guide",source:"@site/docs/website/legacy/Developers/contributing-guide.md",sourceDirName:"legacy/Developers",slug:"/legacy/Developers/contributing-guide",permalink:"/docs/website/legacy/Developers/contributing-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/ufosc/osc-docs/blob/main/docs/website/legacy/Developers/contributing-guide.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Contributing Guide",description:"Club Website Developer Contributing Guide",sidebar_position:10},sidebar:"defaultSidebar",previous:{title:"Deploying to Kubernetes",permalink:"/docs/website/legacy/Developers/kubernetes"},next:{title:"API Reference",permalink:"/docs/website/legacy/api-reference"}},d={},a=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Contribution workflow",id:"contribution-workflow",level:2},{value:"Commit Messages",id:"commit-messages",level:2},{value:"Writing messages",id:"writing-messages",level:3},{value:"Message prefixes",id:"message-prefixes",level:3},{value:"Pull Requests",id:"pull-requests",level:2},{value:"Opening issues",id:"opening-issues",level:2},{value:"Feature proposals",id:"feature-proposals",level:3},{value:"Bugs and errors",id:"bugs-and-errors",level:3},{value:"Typos",id:"typos",level:3},{value:"Fixing issues and implementing proposals",id:"fixing-issues-and-implementing-proposals",level:3},{value:"Standard README",id:"standard-readme",level:2},{value:"Standard JS",id:"standard-js",level:2},{value:"Labels",id:"labels",level:2},{value:"Maintainers",id:"maintainers",level:2}];function c(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"contributing-guide",children:"Contributing Guide"}),"\n",(0,s.jsx)(i.admonition,{title:"OUTDATED",type:"danger",children:(0,s.jsxs)(i.p,{children:["This page is part of the documentation for release V1.0. This documentation is outdated and V1.0 is no longer maintained. See ",(0,s.jsx)(i.a,{href:"/docs/website/",children:"index"})," for the latest information."]})}),"\n",(0,s.jsx)(i.admonition,{title:"Static Copy",type:"danger",children:(0,s.jsxs)(i.p,{children:["This is a copy of the contributing guide originally hosted on Github, reproduced here solely for presentation purposes. It may not be up-to-date. Developers should refer to the ",(0,s.jsx)(i.a,{href:"https://github.com/ufosc/Club_Website_2/blob/main/CONTRIBUTING.md",children:"original copy"})," whenever possible."]})}),"\n",(0,s.jsx)(i.p,{children:"The OSC website is free and open source software, all contributions are welcome and appreciated so long as they comply with AGPL-3.0-or-later licensing. To expedite the submission and review process, we urge all contributors to familiarize themselves with the following contribution guidelines."}),"\n",(0,s.jsx)(i.h2,{id:"table-of-contents",children:"Table of contents"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#contribution-workflow",children:"Contribution Workflow"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"#commit-messages",children:"Commit Messages"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#writing-messages",children:"Writing Messages"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#message-prefixes",children:"Message Prefixes"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#pull-requests",children:"Pull Requests"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"#opening-issues",children:"Opening Issues"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#feature-proposals",children:"Feature Proposals"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#bugs-and-errors",children:"Bugs & Errors"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#typos",children:"Typos"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#fixing-issues-and-implementing-proposals",children:"Fixing Issues & Implementing Proposals"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#standard-readme",children:"Standard README"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#standard-js",children:"Standard JS"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#labels",children:"Labels"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#maintainers",children:"Maintainers"})}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"contribution-workflow",children:"Contribution workflow"}),"\n",(0,s.jsxs)(i.p,{children:["Always discuss big changes by speaking with your group, by contacting a maintainer or by opening a discussion issue (see ",(0,s.jsx)(i.a,{href:"#opening-issues",children:"opening issues"}),")."]}),"\n",(0,s.jsx)(i.p,{children:"Suggested workflow:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"(Optional) fork the project repository."}),"\n",(0,s.jsxs)(i.li,{children:["Checkout a new branch from ",(0,s.jsx)(i.code,{children:"main"}),".","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["ALWAYS branch from the latest version of ",(0,s.jsx)(i.code,{children:"main"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["Each PR/feature goes on its own branch (again, branched from ",(0,s.jsx)(i.code,{children:"main"}),"). This ensures that new features are not dependent on uncommitted code."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Commit changes","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Refer to ",(0,s.jsx)(i.a,{href:"#commit-messages",children:"Commit Messages"})," for writing commit messages."]}),"\n",(0,s.jsx)(i.li,{children:'Each commit should be small and specific, don\'t try to push large/generic commits like "updated app" or "updated to requested changes".'}),"\n",(0,s.jsx)(i.li,{children:"Each commit should describe a change to the codebase. You can nest multiple files under a commit, as long as the message applies to both."}),"\n",(0,s.jsx)(i.li,{children:"Small, specific commits allow maintainers to easily revert/modify changes, keep track of versions and detect problems."}),"\n",(0,s.jsx)(i.li,{children:"Messed up your commit history? Its ok, maintainers are the ones ultimately responsible for maintaining messages."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Write unit tests (if needed)."}),"\n",(0,s.jsxs)(i.li,{children:["Once you're finished making changes...","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Open a terminal and run ",(0,s.jsx)(i.code,{children:"npm run test"})," to test your code."]}),"\n",(0,s.jsx)(i.li,{children:"If tests fail, it's your responsibility to fix breaking changes."}),"\n",(0,s.jsxs)(i.li,{children:["Lint your code with ",(0,s.jsx)(i.code,{children:"npm run fix"}),". This will (try to) automatically fix your code syntax for you."]}),"\n",(0,s.jsxs)(i.li,{children:["Run ",(0,s.jsx)(i.code,{children:"npm run lint"})," to check for any remaining syntax issues. Please fix these."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Push to origin with ",(0,s.jsx)(i.code,{children:"git push origin [your branch name]"})," on your terminal."]}),"\n",(0,s.jsxs)(i.li,{children:["Create a pull request.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"If you've made changes to a fork, make sure you're opening a pull request to the original remote repository."}),"\n",(0,s.jsxs)(i.li,{children:["Always open PR's on the ",(0,s.jsx)(i.code,{children:"main"})," branch unless otherwise instructed. Convoluted merge histories create dependency hell and are hard to review."]}),"\n",(0,s.jsx)(i.li,{children:"Add a descriptive title and describe your changes."}),"\n",(0,s.jsxs)(i.li,{children:["Refer to ",(0,s.jsx)(i.a,{href:"#pull-requests",children:"Pull Requests"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Wait for your code to be reviewed and repeat steps 3-6 for any requested changes."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"commit-messages",children:"Commit Messages"}),"\n",(0,s.jsx)(i.p,{children:"Commits and commit messages should be written for each (loosely) independent change made. It goes without saying that messages should be as specific as possible - if a change can't be described in a single sentence then it probably has to be broken down into multiple commits."}),"\n",(0,s.jsx)(i.p,{children:"Messed up your commit history? That's ok, maintainers are the ones ultimately responsible for maintaining commit messages."}),"\n",(0,s.jsx)(i.h3,{id:"writing-messages",children:"Writing messages"}),"\n",(0,s.jsxs)(i.p,{children:["That said, avoid commiting large changes all at once: messages like ",(0,s.jsx)(i.code,{children:"updated app"})," or ",(0,s.jsx)(i.code,{children:"fixed problem"})," should be broken down into their specific constituents. For example:"]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"fixed problem"})," should ideally be broken up into multiple commits like ",(0,s.jsx)(i.code,{children:"fix: added missing form validation"})," or ",(0,s.jsx)(i.code,{children:"fix: typo"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"updated app"}),": What exactly did you update and how did you do it? Break up each change into a commit like ",(0,s.jsx)(i.code,{children:"feat: added form element for xyz"}),", or ",(0,s.jsx)(i.code,{children:"feat: added password field"}),"."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"message-prefixes",children:"Message prefixes"}),"\n",(0,s.jsx)(i.p,{children:"We recommend adding the following prefixes to your commit messages. These aren't necessary, but they keep the commit history clean-looking:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"feat: ..."}),": For new features."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"docs: ..."}),": For adding or changing documentation"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"ci: ..."}),": For modifying CI, jobs or workflows"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"fix: ..."}),": For when you've fixed something."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"lint: ..."}),": For when you've fixed/changed code syntax."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"refactor: ..."}),": For when you've rewritten or reorganized something. Use this if you've moved files or created folders. This is different from ",(0,s.jsx)(i.code,{children:"lint"})," because it doesn't necessarily describe syntactical changes, it describes organizational changes."]}),"\n",(0,s.jsx)(i.li,{children:"Does your specific change not apply to any of these? Use your own best judgment."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"pull-requests",children:"Pull Requests"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Always discuss big changes with by speaking to your group, by contacting a maintainer or by opening a discussion issue (see ",(0,s.jsx)(i.a,{href:"#opening-issues",children:"opening issues"}),"). This increases the likelihood that they'll be accepted."]}),"\n",(0,s.jsxs)(i.li,{children:["Always open pull requests on the ",(0,s.jsx)(i.code,{children:"main"})," branch."]}),"\n",(0,s.jsx)(i.li,{children:"Each branch and pull request should only feature 1 significant change. We might like one feature but not like the other - if they're on separate PRs we can approve/reject them easily, otherwise you'll have to do a lot of refactoring."}),"\n",(0,s.jsx)(i.li,{children:"Add an appropriate title. Like commit messages, your PR titles should be intuitive to understand and should give a good overview of what you've accomplished."}),"\n",(0,s.jsx)(i.li,{children:"Add a description. Explain what you've done and why you've done it - it might be useful to include code blocks and explain your reasoning."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"opening-issues",children:"Opening issues"}),"\n",(0,s.jsx)(i.h3,{id:"feature-proposals",children:"Feature proposals"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Add an appropriate title."}),"\n",(0,s.jsx)(i.li,{children:"Explain your proposed feature and why it might be useful."}),"\n",(0,s.jsx)(i.li,{children:"(Optional) Suggest an approach/method for it to be done."}),"\n",(0,s.jsx)(i.li,{children:"(Optional) Request to be assigned if you want to implement the proposal yourself."}),"\n",(0,s.jsxs)(i.li,{children:["(Optional) Add the github ",(0,s.jsx)(i.code,{children:"proposal"})," issue label."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"bugs-and-errors",children:"Bugs and errors"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Add an appropriate title."}),"\n",(0,s.jsx)(i.li,{children:"Explain the bug/error you've encountered."}),"\n",(0,s.jsx)(i.li,{children:"Add a list of steps to reproduce the problem."}),"\n",(0,s.jsx)(i.li,{children:"(Optional) Add a screenshot."}),"\n",(0,s.jsxs)(i.li,{children:["(Optional) Add the github ",(0,s.jsx)(i.code,{children:"bug"})," or ",(0,s.jsx)(i.code,{children:"error"})," label."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"typos",children:"Typos"}),"\n",(0,s.jsx)(i.p,{children:"Don't open issues for typos, just fix them and create a PR."}),"\n",(0,s.jsx)(i.h3,{id:"fixing-issues-and-implementing-proposals",children:"Fixing issues and implementing proposals"}),"\n",(0,s.jsx)(i.p,{children:"Please ask (by replying to the conversation) before trying to fix an issue or implement a feature proposal. Don't waste your time: the issue might be outdated, someone else might already be assigned or we might be waiting for more information."}),"\n",(0,s.jsx)(i.h2,{id:"standard-readme",children:"Standard README"}),"\n",(0,s.jsxs)(i.p,{children:["This repository adheres to the README standard style described ",(0,s.jsx)(i.a,{href:"https://github.com/RichardLitt/standard-readme",children:"here"}),". Please adhere to the standard when making or requesting changes."]}),"\n",(0,s.jsx)(i.p,{children:"Maintainers are responsible for enforcement."}),"\n",(0,s.jsx)(i.h2,{id:"standard-js",children:"Standard JS"}),"\n",(0,s.jsxs)(i.p,{children:["This repository adheres to Javascript Standard syntax described ",(0,s.jsx)(i.a,{href:"https://standardjs.com/",children:"here"}),". Contributors can run ",(0,s.jsx)(i.code,{children:"npm run lint"})," to list syntax issues that need to be fixed for adherence, or ",(0,s.jsx)(i.code,{children:"npm run fix"})," to (try to) automatically fix some of them."]}),"\n",(0,s.jsx)(i.p,{children:"Maintainers are responsible for enforcement."}),"\n",(0,s.jsx)(i.h2,{id:"labels",children:"Labels"}),"\n",(0,s.jsx)(i.p,{children:"Refer to this guideline on what labels to use and look for when deciding on what to contribute to."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"bug/error"}),": Something isn't working properly."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"difficulty"}),": How hard the issue is to resolve (easy, medium, hard)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"discussion"}),": Should be discussed before moving forward."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"documentation"}),": Related to the documentation."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"duplicate"}),": It already exists."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"good first issue"}),": Friendly for beginners to work on."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"help wanted"}),": Someone is needed to work on it."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"priority"}),": How important it needs to be worked on (low, medium, high)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"proposal"}),": Brings up a new idea."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"question"}),": Requesting more information."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"wontfix"}),": Won't be worked on anymore."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"maintainers",children:"Maintainers"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Review all PRs before merging."}),"\n",(0,s.jsxs)(i.li,{children:["When upgrading the release version:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Create a ",(0,s.jsx)(i.code,{children:"BUMP X.X.X"})," commit message (where ",(0,s.jsx)(i.code,{children:"X.X.X"})," is the version). If anyone ever wants to revert to a particular version, they can just modify the git history head to point to this commit."]}),"\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsx)(i.code,{children:"package.json"})," contains a version tag, make sure it gets updated."]}),"\n",(0,s.jsx)(i.li,{children:"Create a github release."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Enforce Standard README style."}),"\n",(0,s.jsx)(i.li,{children:"Enforce unit testing: ask contributors to write unit tests and fix failing PRs."}),"\n",(0,s.jsxs)(i.li,{children:["Enforce Javascript Standard style: ask contributors to ",(0,s.jsx)(i.code,{children:"npm run lint"})," and ",(0,s.jsx)(i.code,{children:"npm run fix"}),"."]}),"\n",(0,s.jsx)(i.li,{children:"Enforce commit history: rebase commit messages if required."}),"\n",(0,s.jsx)(i.li,{children:"Discuss big changes with the group."}),"\n",(0,s.jsx)(i.li,{children:"Ask another maintainer to peer-review your code."}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>l});var s=n(6540);const r={},o=s.createContext(r);function t(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);