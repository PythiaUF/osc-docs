"use strict";(self.webpackChunkosc_docs=self.webpackChunkosc_docs||[]).push([[123],{9206:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var t=r(4848),n=r(8453);const o={title:"API & Routes",description:"Club Website Developer API",sidebar_position:1},i="API & Routes",a={id:"legacy/Developers/API/api",title:"API & Routes",description:"Club Website Developer API",source:"@site/docs/website/legacy/Developers/API/api.md",sourceDirName:"legacy/Developers/API",slug:"/legacy/Developers/API/",permalink:"/docs/website/legacy/Developers/API/",draft:!1,unlisted:!1,editUrl:"https://github.com/ufosc/osc-docs/blob/main/docs/website/legacy/Developers/API/api.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"API & Routes",description:"Club Website Developer API",sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Database Models",permalink:"/docs/website/legacy/Developers/Databases/models"},next:{title:"Blog Route",permalink:"/docs/website/legacy/Developers/API/blog"}},c={},d=[{value:"Express",id:"express",level:2},{value:"Express Router",id:"express-router",level:2}];function l(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"api--routes",children:"API & Routes"}),"\n",(0,t.jsx)(s.admonition,{title:"OUTDATED",type:"danger",children:(0,t.jsxs)(s.p,{children:["This page is part of the documentation for release V1.0. This documentation is outdated and V1.0 is no longer maintained. See ",(0,t.jsx)(s.a,{href:"/docs/website/",children:"index"})," for the latest information."]})}),"\n",(0,t.jsx)(s.p,{children:"The OSC website API exists to serve, create, modify, and delete dynamic resources, for instance:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["Blog metadata and rendered HTML articles (documented in ",(0,t.jsx)(s.a,{href:"/docs/website/legacy/Developers/API/blog",children:"Developers/API/blog"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:["Passing contact messages to the SMTP mail server (documented in ",(0,t.jsx)(s.a,{href:"/docs/website/legacy/Developers/API/contact",children:"Developers/API/contact"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:["Serving the various editable forms (documented in ",(0,t.jsx)(s.a,{href:"/docs/website/legacy/Developers/API/edit",children:"Developers/API/edit"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:["User authentication (documented in ",(0,t.jsx)(s.a,{href:"/docs/website/legacy/Developers/API/users",children:"Developers/API/users"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["In the source code, each route occupies a separate file in the ",(0,t.jsx)(s.a,{href:"https://github.com/ufosc/Club_Website_2/tree/main/routes",children:"routes folder"}),", and all routes are subsequently organized in ",(0,t.jsx)(s.a,{href:"https://github.com/ufosc/Club_Website_2/blob/main/routes/api.js",children:"routes/api.js"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"express",children:"Express"}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["Express.js is a backend web framework for creating and serving RESTful APIs on NodeJS. It is documented extensively at ",(0,t.jsx)(s.a,{href:"https://expressjs.com/",children:"expressjs.com"}),"."]})}),"\n",(0,t.jsxs)(s.p,{children:["Expressjs, otherwise known as Express, implements a simple NodeJS web server. It defines a relative routing path and a series of middleware to use with each function. Each middleware is a JavaScript function that accepts an HTTP request (the ",(0,t.jsx)(s.code,{children:"req"})," variable) and a response object (the ",(0,t.jsx)(s.code,{children:"res"})," variable). The ",(0,t.jsx)(s.code,{children:"res"})," variable is an interface for sending responses back to users."]}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"// An API route served over '/', using the HTTP GET method.\nrouter.get('/', (req, res) => {\n\n\t// req holds the user's request.\n\tconst body = req.body\n\tconst someField = body.someField\n\tconst someField2 = body.someField2\n\n\t// We respond by interfacing with 'res'\n\tres.status(200).send({ message: \"accepted\" })\n\n})\n\n// Other HTTP methods...\nrouter.post('/', (req, res) => { /* ... */ })\nrouter.delete('/', (req, res) => { /* ... */ })\nrouter.put('/', (req, res) => { /* ... */ })\n"})}),"\n",(0,t.jsx)(s.h2,{id:"express-router",children:"Express Router"}),"\n",(0,t.jsxs)(s.p,{children:["The express router, part of the Expressjs framework, enables developers to create and export APIs modularly. Meaning, an API can be developed according to some relative path (e.g ",(0,t.jsx)(s.code,{children:"/users"}),"), imported into another router, and then served over some other, more abstract path (e.g ",(0,t.jsx)(s.code,{children:"/api/users"}),"). Consider the following example:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="File A"',children:"const express = require('express')\nconst router = express.Router()\n\nrouter.get('/', (req, res) => { /* ... */ }\nrouter.post('/', (req, res) => { /* ... */ }\n// ...\n\nmodule.exports = router\n"})}),"\n",(0,t.jsx)(s.p,{children:"Then, imported into file B:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="File B"',children:"const express = require('express')\nconst router = express.Router()\n\n// The API defined in File A.\nconst myFirstRoute = require('./fileA')\n\n// Serve the API in File A on /mySecondRoute.\nrouter.use('/mySecondRoute', myFirstRoute)\n"})}),"\n",(0,t.jsx)(s.p,{children:"In this way, HTTP routes can be defined in a secure, conveniently testable, and organized manner."})]})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>a});var t=r(6540);const n={},o=t.createContext(n);function i(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);